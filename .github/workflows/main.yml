name: My First GitHub Actions

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    strategy:
      matrix:
        python-version: [3.9, 3.8]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests
      run: python -m pytest addition.py
      
    - name: Create Artifact
      run: |
        mkdir -p artifact
        # Copy the 'addition.py' file and other necessary files into the artifact directory
        #cp code/addition.py artifact/  # Copy 'addition.py' file
        cp -r addition.py artifact/
        
        echo "Packaged Python code for artifact publishing."
        ls -al artifact  # List the contents of the artifact directory to verify
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-code-artifact
        path: artifact/

deploy:
  runs-on: ubuntu-latest
  needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: python-code-artifact
        
    - name: Verify Downloaded Artifact
      run: |
        # List the contents of the current directory to verify the artifact is downloaded
        echo "Listing files after artifact download"
        ls -al
        echo "Listing contents of the downloaded artifact"
        ls -al  # This will show the contents of the artifact files

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-south-1'

    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/my-key.pem
        chmod 600 ~/.ssh/my-key.pem  # Set appropriate permissions for the private key

    - name: Ensure target directory exists on EC2
      run: |
        ssh -i ~/.ssh/my-key.pem ubuntu@172.31.37.41 << 'EOF'
          # Ensure /home/ubuntu/app directory exists
          sudo mkdir -p /home/ubuntu/app
          sudo chown ubuntu:ubuntu /home/ubuntu/app  # Give ownership to the ubuntu user
          # Ensure it has the correct permissions
          sudo chmod 755 /home/ubuntu/app
        EOF

    - name: Deploy code to EC2
      run: |
      
        scp -i ~/.ssh/my-key.pem -r * ubuntu@172.31.37.41:/home/ubuntu/app

        # SSH into the EC2 instance to install dependencies and start the app
        ssh -i ~/.ssh/my-key.pem ubuntu@172.31.37.41 << 'EOF'
          cd /home/ubuntu/app
          # Install dependencies if not already installed
          python -m pip install --upgrade pip
          pip install pytest
          # Start the Python app (adjust the command as needed)
          nohup python addition.py &
          echo "Application started."
        EOF


